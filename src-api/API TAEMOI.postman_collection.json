{
	"info": {
		"_postman_id": "526a68f2-1331-453f-b42b-a4bbc45f734e",
		"name": "API TAEMOI",
		"description": "La aplicación TaeMoi es una plataforma diseñada para administrar y gestionar información relacionada con alumnos en la escuela de taekwondo \"MOISKIMDO TAEKWONDO\" en Umbrete. Desde el seguimiento de datos personales hasta el registro de información relevante, mi aplicación ofrece una solución completa y eficiente para simplificar la gestión de alumnos.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32188944"
	},
	"item": [
		{
			"name": "Alumnos completo",
			"item": [
				{
					"name": "Listar Alumnos",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite listar todos los alumnos registrados en el sistema.\n\n#### URL\n\n`GET http://localhost:8080/api/admin`\n\n#### Parámetros de consulta\n\nNo se requieren parámetros de consulta para esta solicitud.\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de todos los alumnos.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Listar Grupos de Alumno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c3VhcmlvUHJ1ZWJhQGdtYWlsLmNvbSIsImlhdCI6MTcxNjM5Nzk2MiwiZXhwIjoxNzE2NDMzOTYyfQ.0Tm6dTQjWw0ecTrDSPsAHSGRZ-Pq8x2-ukLLWQVdhOw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos/2/grupos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos",
								"2",
								"grupos"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite listar todos los alumnos registrados en el sistema.\n\n#### URL\n\n`GET http://localhost:8080/api/admin`\n\n#### Parámetros de consulta\n\nNo se requieren parámetros de consulta para esta solicitud.\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de todos los alumnos.\n- **404 Not Found** - Si no se encuentra ningún alumno.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Listar Alumno Por Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin/19",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"19"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener la información de un alumno específico mediante su ID.\n\n#### URL\n\n`GET http://localhost:8080/api/admin/{id}`\n\n- `{id}`: El ID del alumno que se desea obtener.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del alumno que se desea obtener.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Si se encuentra el alumno, se devuelve la información del alumno.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno con el ID especificado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Listar Alumnos Paginado",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin?{{numPagina}}&{{tamPagina}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin"
							],
							"query": [
								{
									"key": "{{numPagina}}",
									"value": null
								},
								{
									"key": "{{tamPagina}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite listar los alumnos registrados en el sistema de forma paginada.\n\n#### URL\n\n`GET http://localhost:8080/api/admin`\n\n#### Parámetros de consulta\n\n- `page` : El número de página que se desea obtener.\n    \n- `size` : El tamaño de la página, es decir, el número de elementos por página.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista paginada de alumnos.\n    \n- **400 Bad Request** - Si los parámetros de paginación son inválidos.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuarios, login y registro",
			"item": [
				{
					"name": "Listar usuarios",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTc4MDE4ODEsImV4cCI6MTcxNzgzNzg4MX0.8NU-BAeOrsg8cxQ5cEljnwqSFJQeAyGqRLCXo5ONJDs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"users"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de todos los usuarios registrados en el sistema.\n\n#### URL\n\n`GET http://localhost:8080/api/admin/users`\n\n#### Parámetros de consulta\n\nNo se requieren parámetros de consulta para esta solicitud.\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de todos los usuarios.\n    \n- **404 Not Found** - Si no se encuentra ningún usuario registrado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Login admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"crolyx16@gmail.com\",\r\n    \"contrasena\": \"17022003\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite a un administrador iniciar sesión en el sistema.\n\n#### URL\n\n`POST http://localhost:8080/api/auth/signin`\n\n#### Parámetros del Cuerpo\n\nEl cuerpo de la solicitud debe contener las credenciales de inicio de sesión en formato JSON.\n\n- `username` (requerido): Nombre de usuario del administrador.\n    \n- `password` (requerido): Contraseña del administrador.\n    \n\n#### Encabezados\n\n- `Content-Type: application/json`\n    \n\n#### Respuestas\n\n- **200 OK** - Si el inicio de sesión es exitoso. Se devuelve el token de autenticación.\n    \n- **401 Unauthorized** - Si las credenciales de inicio de sesión son inválidas."
					},
					"response": []
				},
				{
					"name": "Login user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"usuarioPrueba@gmail.com\",\r\n    \"contrasena\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite a un usuario iniciar sesión en el sistema.\n\n#### URL\n\n`POST http://localhost:8080/api/auth/signin`\n\n#### Parámetros del Cuerpo\n\nEl cuerpo de la solicitud debe contener las credenciales de inicio de sesión en formato JSON.\n\n- `username` (requerido): Nombre de usuario del usuario.\n    \n- `password` (requerido): Contraseña del usuario.\n    \n\n#### Encabezados\n\n- `Content-Type: application/json`\n    \n\n#### Respuestas\n\n- **200 OK** - Si el inicio de sesión es exitoso. Se devuelve el token de autenticación.\n    \n- **401 Unauthorized** - Si las credenciales de inicio de sesión son inválidas."
					},
					"response": []
				},
				{
					"name": "Login manager",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"moiskimdotaekwondo@gmail.com\",\r\n    \"contrasena\": \"09012013\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite a un gestor iniciar sesión en el sistema.\n\n#### URL\n\n`POST http://localhost:8080/api/auth/signin`\n\n#### Parámetros del Cuerpo\n\nEl cuerpo de la solicitud debe contener las credenciales de inicio de sesión en formato JSON.\n\n- `username` (requerido): Nombre de usuario del gestor.\n    \n- `password` (requerido): Contraseña del gestor.\n    \n\n#### Encabezados\n\n- `Content-Type: application/json`\n    \n\n#### Respuestas\n\n- **200 OK** - Si el inicio de sesión es exitoso. Se devuelve el token de autenticación.\n    \n- **401 Unauthorized** - Si las credenciales de inicio de sesión son inválidas."
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Carlos\",\r\n    \"apellidos\": \"Sanchez\",\r\n    \"email\": \"emaIl@email.es\",\r\n    \"contrasena\": \"12345\",\r\n    \"roles\": [\"ROLE_USER\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"signup"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite a un usuario registrarse en el sistema.\n\n#### URL\n\n`POST http://localhost:8080/api/auth/signup`\n\n#### Parámetros del Cuerpo\n\nEl cuerpo de la solicitud debe contener los datos de registro del usuario en formato JSON.\n\n- `username` (requerido): Nombre de usuario del nuevo usuario.\n    \n- `email` (requerido): Correo electrónico del nuevo usuario.\n    \n- `password` (requerido): Contraseña del nuevo usuario.\n    \n\n#### Encabezados\n\n- `Content-Type: application/json`\n    \n\n#### Respuestas\n\n- **200 OK** - Si el registro es exitoso. Se devuelve el token de autenticación.\n    \n- **400 Bad Request** - Si hay un problema con los datos proporcionados.\n    \n- **409 Conflict** - Si ya existe un usuario con el mismo nombre de usuario o correo electrónico."
					},
					"response": []
				},
				{
					"name": "Obtener Roles de Usuario Autenticado",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTYzODAxNTAsImV4cCI6MTcxNjQxNjE1MH0.4sUdYu2m1tONsRy0MGNKLYw37GQvCDIlSj_IgTFkWtM",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/auth/roles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"roles"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de todos los roles registrados en el sistema.\n\n#### URL\n\n`GET http://localhost:8080/api/admin/users`\n\n#### Parámetros de consulta\n\nNo se requieren parámetros de consulta para esta solicitud.\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de todos los usuarios.\n    \n- **404 Not Found** - Si no se encuentra ningún usuario registrado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Listar usuario autenticado",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTYzODAxNTAsImV4cCI6MTcxNjQxNjE1MH0.4sUdYu2m1tONsRy0MGNKLYw37GQvCDIlSj_IgTFkWtM",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/auth/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"user"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de todos los usuarios registrados en el sistema.\n\n#### URL\n\n`GET http://localhost:8080/api/admin/users`\n\n#### Parámetros de consulta\n\nNo se requieren parámetros de consulta para esta solicitud.\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de todos los usuarios.\n    \n- **404 Not Found** - Si no se encuentra ningún usuario registrado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				}
			]
		},
		{
			"name": "AlumnosDTO",
			"item": [
				{
					"name": "Listar Alumnos DTO Paginado",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{numPagina}}&{{tamPagina}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{numPagina}}",
									"value": null
								},
								{
									"key": "{{tamPagina}}",
									"value": null
								}
							]
						},
						"description": "### Descripción\n\nEste endpoint permite obtener una lista paginada de alumnos en formato DTO (Data Transfer Object).\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos`\n\n#### Parámetros de consulta\n\n- `page` : El número de página que se desea obtener.\n    \n- `size` : El tamaño de la página, es decir, el número de elementos por página.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Si se encuentran alumnos que coinciden con los criterios de búsqueda, se devuelve una lista paginada de alumnos DTO.\n    \n- **404 Not Found** - Si no se encuentran alumnos que coincidan con los criterios de búsqueda.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Listar Alumnos DTO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de todos los alumnos en formato DTO.\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos`\n\n#### Parámetros de consulta\n\nNo se requieren parámetros de consulta para esta solicitud.\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de todos los alumnos en formato DTO.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno registrado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Listar Alumno Por Id DTO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos/19",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos",
								"19"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener la información de un alumno específico mediante su ID en formato DTO.\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos/{id}`\n\n- `{id}`: El ID del alumno que se desea obtener.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del alumno que se desea obtener.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Si se encuentra el alumno, se devuelve la información del alumno en formato DTO.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno con el ID especificado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener grupos de alumno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c3VhcmlvUHJ1ZWJhQGdtYWlsLmNvbSIsImlhdCI6MTcxNjQ1Mjk5NCwiZXhwIjoxNzE2NDg4OTk0fQ.iC3M0dK8UPDnrVUcgDkfqXt2iQnSKugLB1CO1DI_2tk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos/1/grupos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos",
								"1",
								"grupos"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener los grupos de un determinado alumno por su id.\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos/{id}/grupos`\n\n- `{id}`: El ID del alumno del que deseas obtener el grupo.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del alumno del que deseas obtener el grupo.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Si se encuentra el alumno, se devuelve la información de sus grupos asociados.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno con el ID especificado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				}
			]
		},
		{
			"name": "Filtrados",
			"item": [
				{
					"name": "Filtrar alumnos por nombre",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{nombre}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{nombre}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite filtrar los alumnos por nombre.\n\n#### URL\n\n`GET` [<code>http://localhost:8080/api/alumnos?nombre=Florencia</code>](http://localhost:8080/api/alumnos?nombre=Florencia)\n\n(El nombre lo cambias por el que necesites).\n\n#### Parámetros de consulta\n\n- `nombre` : El nombre por el cual se desea filtrar los alumnos.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de alumnos que coinciden con el nombre especificado.\n- **404 Not Found** - Si no se encuentra ningún alumno con el nombre especificado.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Filtrar alumnos por categoría",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{categoriaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{categoriaId}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite filtrar los alumnos por categoría.\n\n#### URL\n\n`GET` [<code>http://localhost:8080/api/alumnos?categoriaId=7</code>](http://localhost:8080/api/alumnos?categoriaId=7)\n\n(El id lo cambias por el que necesites).\n\n#### Parámetros de consulta\n\n- `categoriaId` : El id de la categoría por la cual se desea filtrar los alumnos.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de alumnos que coinciden con la categoría especificada.\n- **404 Not Found** - Si no se encuentra ningún alumno con la categoría especificada.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Filtrar alumnos por grado",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{gradoId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{gradoId}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite filtrar los alumnos por grado.\n\n#### URL\n\n`GET` [<code>http://localhost:8080/api/alumnos?gradoId=3</code>](http://localhost:8080/api/alumnos?categoriaId=7)\n\n(El id lo cambias por el que necesites).\n\n#### Parámetros de consulta\n\n- `gradoId` : El id del grado por el cual se desea filtrar los alumnos.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de alumnos que coinciden con el grado especificado.\n- **404 Not Found** - Si no se encuentra ningún alumno con el grado especificado.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Filtrar alumnos por nombre y grado",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{nombre}}&{{gradoId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{nombre}}",
									"value": null
								},
								{
									"key": "{{gradoId}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite filtrar los alumnos por nombre y grado.\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos?nombre=Florencia&gradoId=3`\n\n(El nombre y el id lo cambias por el que necesites).\n\n#### Parámetros de consulta\n\n- `nombre` : El nombre por el cual se desea filtrar los alumnos.\n- `gradoId` : El ID del grado por el cual se desea filtrar los alumnos.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de alumnos que coinciden con el nombre y grado especificados.\n- **404 Not Found** - Si no se encuentra ningún alumno con el nombre y grado especificados.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Filtrar alumnos por nombre y categoría",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{nombre}}&{{categoriaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{nombre}}",
									"value": null
								},
								{
									"key": "{{categoriaId}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite filtrar los alumnos por nombre y categoría.\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos?nombre=Florencia&categoriaId=7`\n\n(El nombre y el id lo cambias por el que necesites).\n\n#### Parámetros de consulta\n\n- `nombre` : El nombre por el cual se desea filtrar los alumnos.\n- `categoriaId` : El ID de la categoría por la cual se desea filtrar los alumnos.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de alumnos que coinciden con el nombre y categoría especificados.\n- **404 Not Found** - Si no se encuentra ningún alumno con el nombre y categoría especificados.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Filtrar alumnos por grado y categoría",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{gradoId}}&{{categoriaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{gradoId}}",
									"value": null
								},
								{
									"key": "{{categoriaId}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite filtrar los alumnos por grado y categoría.\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos?gradoId=3&categoriaId=7`\n\n(Los id los cambias por los que necesites).\n\n#### Parámetros de consulta\n\n- `gradoId` : El ID del grado por el cual se desea filtrar los alumnos.\n- `categoriaId` : El ID de la categoría por la cual se desea filtrar los alumnos.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de alumnos que coinciden con el grado y categoría especificados.\n- **404 Not Found** - Si no se encuentra ningún alumno con el grado y categoría especificados.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Filtrar alumnos por nombre, grado y categoría",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos?{{nombre}}&{{gradoId}}&{{categoriaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos"
							],
							"query": [
								{
									"key": "{{nombre}}",
									"value": null
								},
								{
									"key": "{{gradoId}}",
									"value": null
								},
								{
									"key": "{{categoriaId}}",
									"value": null
								}
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite filtrar los alumnos por nombre, grado y categoría.\n\n#### URL\n\n`GET http://localhost:8080/api/alumnos?nombre=Florencia&gradoId=3&categoriaId=7`\n\n(El nombre y los id los cambias por los que necesites).\n\n#### Parámetros de consulta\n\n- `nombre` : El nombre por el cual se desea filtrar los alumnos.\n    \n- `gradoId` : El ID del grado por el cual se desea filtrar los alumnos.\n    \n- `categoriaId` : El ID de la categoría por la cual se desea filtrar los alumnos.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Se devuelve una lista de alumnos que coinciden con el nombre, grado y categoría especificados.\n- **404 Not Found** - Si no se encuentra ningún alumno con el nombre, grado y categoría especificados.\n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				}
			]
		},
		{
			"name": "CRUD Alumnos",
			"item": [
				{
					"name": "Añadir alumno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "nuevo",
									"value": "{\n  \"tipoTarifa\": \"FAMILIAR\",\n  \"nombre\": \"Carlos\",\n  \"apellidos\": \"Sanchez\",\n  \"numeroExpediente\": 123456789,\n  \"fechaNacimiento\": \"2003-02-17\",\n  \"nif\": \"29501424Z\",\n  \"direccion\": \"Caserio Pedro,asd5asd3, Madrid, Com 19407\",\n  \"telefono\": \"695568455\",\n  \"email\": \"csanrom1702@g.educaand.es\",\n  \"fechaAlta\": \"2003-10-19\"\n}",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1ef0edd3-b51e-49c0-b5e2-6e5b35396a63"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/alumnos/crear",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos",
								"crear"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite añadir un nuevo alumno al sistema.\n\n#### URL\n\n`POST http://localhost:8080/api/alumnos/crear`\n\n#### Cuerpo de la Solicitud\n\nEl cuerpo de la solicitud debe contener los datos del nuevo alumno en un FormData con imagen opcional y el cuerpo en formato JSON.\n\n#### Parámetros del Cuerpo\n\n- `nombre` (requerido): Nombre del alumno.\n    \n- `apellidos` (requerido): Apellidos del alumno.\n    \n- `fechaNacimiento` (requerido): Fecha de nacimiento del alumno (formato YYYY-MM-DD).\n    \n- `numeroExpediente` (requerido): Número de expediente del alumno.\n    \n- `nif` (requerido): Número de identificación fiscal (NIF) del alumno.\n    \n- `direccion` (requerido): Dirección del alumno.\n    \n- `email` (requerido): Correo electrónico del alumno.\n    \n- `telefono` (requerido): Número de teléfono del alumno.\n    \n- `tipoTarifa` (requerido): Tipo de tarifa del alumno.\n    \n- `fechaAlta` (requerido): Fecha de alta del alumno (formato YYYY-MM-DD).\n    \n- `fechaBaja` (opcional): Fecha de baja del alumno (formato YYYY-MM-DD).\n    \n\n#### Encabezados\n\n- `Content-Type: form-data`\n    \n\n#### Respuestas\n\n- **201 Created** - Se ha creado el alumno exitosamente. Se devuelve el objeto del alumno creado.\n    \n- **400 Bad Request** - Si hay un problema con los datos proporcionados.\n    \n- **409 Conflict** - Si ya existe un alumno con el mismo NIF.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Editar Alumno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "alumnoEditado",
									"value": "{\n  \"nombre\": \"Juan\",\n  \"apellidos\": \"Perez\",\n  \"numeroExpediente\": \"12345675\",\n  \"fechaNacimiento\": \"1990-01-01\",\n  \"nif\": \"12345678A\",\n  \"direccion\": \"Calle Principal, 123\",\n  \"telefono\": 123456787,\n  \"email\": \"juan@examples.com\",\n  \"tipoTarifa\": \"FAMILIAR\",\n  \"fechaAlta\": \"2023-01-01\"\n}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/alumnos/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos",
								"21"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite modificar un alumno del sistema.\n\n#### URL\n\n`PUT http://localhost:8080/api/alumnos/{id}`\n\n- `{id}`: El ID del alumno que se desea modificar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del alumno que se desea modificar.\n    \n\n#### Cuerpo de la Solicitud\n\nEl cuerpo de la solicitud debe contener los datos del alumno en un FormData con imagen opcional y el cuerpo modificado en formato JSON.\n\n#### Parámetros del Cuerpo\n\n- `nombre` (requerido): Nombre del alumno.\n    \n- `apellidos` (requerido): Apellidos del alumno.\n    \n- `fechaNacimiento` (requerido): Fecha de nacimiento del alumno (formato YYYY-MM-DD).\n    \n- `numeroExpediente` (requerido): Número de expediente del alumno.\n    \n- `nif` (requerido): Número de identificación fiscal (NIF) del alumno.\n    \n- `direccion` (requerido): Dirección del alumno.\n    \n- `email` (requerido): Correo electrónico del alumno.\n    \n- `telefono` (requerido): Número de teléfono del alumno.\n    \n- `tipoTarifa` (requerido): Tipo de tarifa del alumno.\n    \n- `fechaAlta` (requerido): Fecha de alta del alumno (formato YYYY-MM-DD).\n    \n- `fechaBaja` (opcional): Fecha de baja del alumno (formato YYYY-MM-DD).\n    \n\n#### Encabezados\n\n- `Content-Type: form-data`\n    \n\n#### Respuestas\n\n- **200 OK** - Alumno editado exitosamente.\n    \n- **400 Bad Request** - Si hay un problema con los datos proporcionados.\n    \n- **404 Not Found**: No se encuentra ningún alumno con el ID especificado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Borrar Alumno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos",
								"21"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar un alumno del sistema.\n\n#### URL\n\n`DELETE http://localhost:8080/api/alumnos/{id}`\n\n- `{id}`: El ID del alumno que se desea eliminar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del alumno que se desea eliminar.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Si se elimina el alumno exitosamente.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno con el ID especificado."
					},
					"response": []
				}
			]
		},
		{
			"name": "Grupos",
			"item": [
				{
					"name": "Añadir grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Grupo de Matemáticas Avanzadas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/grupos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite añadir un nuevo grupo al sistema.\n\n#### URL\n\n`POST http://localhost:8080/api/grupos`\n\n#### Cuerpo de la Solicitud\n\nEl cuerpo de la solicitud debe contener los datos en formato JSON.\n\n#### Parámetros del Cuerpo\n\n- `nombre` (requerido): Nombre del grupo.\n    \n\n#### Encabezados\n\n- `Content-Type: application/json`\n    \n\n#### Respuestas\n\n- **201 Created** - Se ha creado el grupo exitosamente. Se devuelve el objeto del grupo creado.\n    \n- **400 Bad Request** - Si hay un problema con los datos proporcionados.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Editar grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Grupo de Matemáticas Medias\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/grupos/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"1"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite modificar un grupo del sistema.\n\n#### URL\n\n`PUT http://localhost:8080/api/grupos/{id}`\n\n- `{id}`: El ID del grupo que se desea modificar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del grupo que se desea modificar.\n    \n\n#### Cuerpo de la Solicitud\n\nEl cuerpo de la solicitud debe contener los datos del grupo en formato JSON.\n\n#### Parámetros del Cuerpo\n\n- `nombre` (requerido): Nombre del grupo.\n    \n\n#### Encabezados\n\n- `Content-Type: application/json`\n    \n\n#### Respuestas\n\n- **200 OK** - Grupo editado exitosamente.\n    \n- **400 Bad Request** - Si hay un problema con los datos proporcionados.\n    \n- **404 Not Found**: No se encuentra ningún grupo con el ID especificado.\n    \n- **500 Internal Server Error** - Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Eliminar grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/grupos/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"1"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar un grupo del sistema.\n\n#### URL\n\n`DELETE http://localhost:8080/api/grupos/{id}`\n\n- `{id}`: El ID del grupo que se desea eliminar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del grupo que se desea eliminar.\n    \n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK** - Si se elimina el grupo exitosamente.\n    \n- **404 Not Found** - Si no se encuentra ningún alumno con el ID especificado."
					},
					"response": []
				},
				{
					"name": "Añadir alumno a grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/grupos/2/alumnos/19",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"2",
								"alumnos",
								"19"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite agregar un alumno a un grupo específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`POST http://localhost:8080/api/grupos/{grupoId}/alumnos/{alumnoId}`\n\n- `{grupoId}`: El ID del grupo al cual se desea agregar el alumno.\n    \n- `{alumnoId}`: El ID del alumno que se desea agregar al grupo.\n    \n\n#### Parámetros de ruta\n\n- `grupoId` (requerido): El ID del grupo.\n    \n- `alumnoId` (requerido): El ID del alumno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: El alumno fue agregado al grupo exitosamente.\n    \n- **404 Not Found**: No se encontró el grupo con el ID especificado.\n    \n- **500 Internal Server Error**: Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Quitar alumno de grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU1MTMyODUsImV4cCI6MTcxNTU0OTI4NX0.VEAUsyv34wgSSGpy0l7GOBiRcjNsoZylW8iBwao0auI",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/grupos/1/alumnos/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"1",
								"alumnos",
								"21"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar un alumno de un grupo específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`DELETE http://localhost:8080/api/grupos/{grupoId}/alumnos/{alumnoId}`\n\n- `{grupoId}`: El ID del grupo del cual se desea eliminar el alumno.\n    \n- `{alumnoId}`: El ID del alumno que se desea eliminar del grupo.\n    \n\n#### Parámetros de ruta\n\n- `grupoId` (requerido): El ID del grupo.\n    \n- `alumnoId` (requerido): El ID del alumno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **204 No Content**: El alumno fue eliminado del grupo exitosamente.\n    \n- **404 Not Found**: No se encontró el grupo con el ID especificado o el alumno no pertenece al grupo.\n    \n- **500 Internal Server Error**: Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener grupo por id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTYyMjE3MjMsImV4cCI6MTcxNjI1NzcyM30.kjBS0MYkTzCHf9dyzzUZL5KdMDEk1UZnTdXBDPayDns",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/grupos/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"6"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener la información de un grupo específico, incluyendo los alumnos asociados a dicho grupo. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`GET http://localhost:8080/api/grupos/{id}`\n\n- `{id}`: El ID del grupo que se desea obtener.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del grupo.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: Información del grupo incluyendo los alumnos asociados.\n    \n- **404 Not Found**: No se encontró ningún grupo con el ID especificado.\n    \n- **500 Internal Server Error**: Si ocurre algún error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener turnos del grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTcwMDE5MzYsImV4cCI6MTcxNzAzNzkzNn0.Cltae00fL3WG4M5fg0Xfe3I7Ogk0oiocPwa_u_OAIVA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/grupos/2/turnos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"2",
								"turnos"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de los turnos asociados a un grupo específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER', 'ROLE_ADMIN' o 'ROLE_USER'.\n\n#### URL\n\n`GET http://localhost:8080/api/grupos/{grupoId}/turnos`\n\n- `{grupoId}`: El ID del grupo del cual se desea obtener los turnos.\n    \n\n#### Parámetros de ruta\n\n- `grupoId` (requerido): El ID del grupo.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: Lista de turnos del grupo.\n    \n- **404 Not Found**: No se encontró ningún turno asociado al grupo especificado.\n    \n- **500 Internal Server Error**: Si ocurre algún error interno en el servidor."
					},
					"response": []
				}
			]
		},
		{
			"name": "Eventos",
			"item": [
				{
					"name": "Añadir evento",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTcwMDI2NTIsImV4cCI6MTcxNzAzODY1Mn0.uyB3Uh4zD6R_44zvpBY23ex4LCd_WiFOKVurGaejCcw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "nuevo",
									"value": "{\n  \"titulo\": \"Título del Evento\",\n  \"descripcion\": \"Descripción del Evento\"\n}",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1ef1c662-b7bc-4bb0-b189-f01f8be53870"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/eventos/crear",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"eventos",
								"crear"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite crear un nuevo evento en el sistema. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'. El evento puede incluir una imagen opcional.\n\n#### URL\n\n`POST http://localhost:8080/api/eventos/crear`\n\n#### Parámetros del Cuerpo\n\n- `nuevo` (requerido): Un string en formato JSON que contiene los detalles del nuevo evento.\n    \n- `file` (opcional): Un archivo de imagen asociado al evento.\n    \n\n#### Ejemplo de Cuerpo\n\n``` json\n{\n    \"titulo\": \"Título del Evento\",\n    \"descripcion\": \"Descripción del Evento\"\n}\n\n ```\n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n- `Content-Type: multipart/form-data`: Tipo de contenido de la solicitud.\n    \n\n#### Respuestas\n\n- **201 Created**: Evento creado exitosamente. Devuelve el objeto del evento creado.\n    \n- **400 Bad Request**: Error al procesar la solicitud.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Editar evento",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTY4NDA5NzcsImV4cCI6MTcxNjg3Njk3N30.KHDYSFLnXxrKBwpUcPmKy5SkNbdflvqR_REdULdXQSM",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "eventoEditado",
									"value": "{\n  \"titulo\": \"Título del Evento23\",\n  \"descripcion\": \"Descripción del Evento\"\n}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/eventos/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"eventos",
								"1"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite actualizar la información de un evento existente en el sistema. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'. La actualización puede incluir una imagen opcional.\n\n#### URL\n\n`PUT http://localhost:8080/api/eventos/{id}`\n\n- `{id}`: El ID del evento que se desea actualizar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del evento.\n    \n\n#### Parámetros del Cuerpo\n\n- `eventoEditado` (requerido): Un string en formato JSON que contiene los detalles del evento actualizado.\n    \n- `file` (opcional): Un archivo de imagen asociado al evento.\n    \n\n#### Ejemplo de Cuerpo\n\n``` json\n{\n    \"titulo\": \"Nuevo Título del Evento\",\n    \"descripcion\": \"Nueva Descripción del Evento\"\n}\n\n ```\n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n- `Content-Type: multipart/form-data`: Tipo de contenido de la solicitud.\n    \n\n#### Respuestas\n\n- **200 OK**: Evento actualizado exitosamente. Devuelve el objeto del evento actualizado.\n    \n- **400 Bad Request**: Error al procesar la solicitud.\n    \n- **404 Not Found**: No se encontró ningún evento con el ID especificado.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Eliminar evento",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTY4NDE2OTgsImV4cCI6MTcxNjg3NzY5OH0.cUtzJTIFRffOMLpguWjor6cNPTE1wBi2eW7CKtCgzRo",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/eventos/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"eventos",
								"3"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar un evento existente en el sistema. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`DELETE http://localhost:8080/api/eventos/{id}`\n\n- `{id}`: El ID del evento que se desea eliminar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del evento.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: El evento fue eliminado exitosamente.\n    \n- **404 Not Found**: No se encontró ningún evento con el ID especificado.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener evento por id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTY4NDE2OTgsImV4cCI6MTcxNjg3NzY5OH0.cUtzJTIFRffOMLpguWjor6cNPTE1wBi2eW7CKtCgzRo",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/eventos/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"eventos",
								"1"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener la información de un evento específico mediante su ID. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`GET http://localhost:8080/api/eventos/{eventoId}`\n\n- `{eventoId}`: El ID del evento que se desea obtener.\n    \n\n#### Parámetros de ruta\n\n- `eventoId` (requerido): El ID del evento.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: Información del evento.\n    \n- **404 Not Found**: No se encontró ningún evento con el ID especificado.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener todos los eventos",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/eventos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"eventos"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de todos los eventos registrados en el sistema. No se requiere autenticación para esta solicitud.\n\n#### URL\n\n`GET http://localhost:8080/api/eventos`\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK**: Lista de todos los eventos.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				}
			]
		},
		{
			"name": "Turnos",
			"item": [
				{
					"name": "Añadir turno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"diaSemana\": \"Jueves\",\r\n    \"horaInicio\": \"17:00\",\r\n    \"horaFin\": \"18:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/turnos/crear",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"turnos",
								"crear"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite crear un nuevo turno y asignarlo a un grupo específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`POST http://localhost:8080/api/turnos/crear-asignando-grupo`\n\n#### Parámetros del Cuerpo\n\n- `turnoDTO` (requerido): Un objeto JSON que contiene los detalles del turno y la información del grupo al que se debe asignar.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n- `Content-Type: application/json`: Tipo de contenido de la solicitud.\n    \n\n#### Respuestas\n\n- **201 Created**: Turno creado y asignado al grupo exitosamente.\n    \n- **400 Bad Request**: Error en los datos proporcionados.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Añadir turno asignándolo a un grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTY0NTQzMjcsImV4cCI6MTcxNjQ5MDMyN30.EPVfS4JyZ0FV-uM0uQeOMMd7wd2mQAKp6rbEpBF2J90",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"diaSemana\": \"Miércoles\",\r\n    \"horaInicio\": \"23:00\",\r\n    \"horaFin\": \"23:00\",\r\n    \"grupoId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/turnos/crear-asignando-grupo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"turnos",
								"crear-asignando-grupo"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite crear un nuevo turno y asignarlo a un grupo específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`POST http://localhost:8080/api/turnos/crear-asignando-grupo`\n\n#### Parámetros del Cuerpo\n\n- `turnoDTO` (requerido): Un objeto JSON que contiene los detalles del turno y la información del grupo al que se debe asignar.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n- `Content-Type: application/json`: Tipo de contenido de la solicitud.\n    \n\n#### Respuestas\n\n- **201 Created**: Turno creado y asignado al grupo exitosamente.\n    \n- **400 Bad Request**: Error en los datos proporcionados.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Editar turno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"diaSemana\": \"Lunes\",\r\n    \"horaInicio\": \"19:00\",\r\n    \"horaFin\": \"20:30\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/turnos/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"turnos",
								"1"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite actualizar la información de un turno existente. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`PUT http://localhost:8080/api/turnos/{turnoId}`\n\n- `{turnoId}`: El ID del turno que se desea actualizar.\n    \n\n#### Parámetros de ruta\n\n- `turnoId` (requerido): El ID del turno.\n    \n\n#### Parámetros del Cuerpo\n\n- `turnoDTO` (requerido): Un objeto JSON que contiene los detalles actualizados del turno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n- `Content-Type: application/json`: Tipo de contenido de la solicitud.\n    \n\n#### Respuestas\n\n- **200 OK**: Turno actualizado exitosamente. Devuelve el objeto del turno actualizado.\n    \n- **404 Not Found**: No se encontró ningún turno con el ID especificado.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Eliminar turno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTYzMTUyMjUsImV4cCI6MTcxNjM1MTIyNX0.gAC1cihs-FSvKbe5mNXwj4MWUVXtxeots5_ABReR9Jk",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/turnos/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"turnos",
								"1"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar un turno existente. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`DELETE http://localhost:8080/api/turnos/{turnoId}`\n\n- `{turnoId}`: El ID del turno que se desea eliminar.\n    \n\n#### Parámetros de ruta\n\n- `turnoId` (requerido): El ID del turno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **204 No Content**: El turno fue eliminado exitosamente.\n    \n- **404 Not Found**: No se encontró ningún turno con el ID especificado.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Añadir turno a grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/grupos/3/turnos/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"3",
								"turnos",
								"3"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite agregar un turno a un grupo específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`POST http://localhost:8080/api/grupos/{grupoId}/turnos/{turnoId}`\n\n- `{grupoId}`: El ID del grupo al cual se desea agregar el turno.\n    \n- `{turnoId}`: El ID del turno que se desea agregar al grupo.\n    \n\n#### Parámetros de ruta\n\n- `grupoId` (requerido): El ID del grupo.\n    \n- `turnoId` (requerido): El ID del turno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: El turno fue agregado al grupo exitosamente.\n    \n- **404 Not Found**: No se encontró el grupo o el turno con los IDs especificados.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Quitar turno de grupo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/grupos/3/turnos/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"grupos",
								"3",
								"turnos",
								"3"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar un turno de un grupo específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`DELETE http://localhost:8080/api/grupos/{grupoId}/turnos/{turnoId}`\n\n- `{grupoId}`: El ID del grupo del cual se desea eliminar el turno.\n    \n- `{turnoId}`: El ID del turno que se desea eliminar del grupo.\n    \n\n#### Parámetros de ruta\n\n- `grupoId` (requerido): El ID del grupo.\n    \n- `turnoId` (requerido): El ID del turno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: El turno fue eliminado del grupo exitosamente.\n    \n- **404 Not Found**: No se encontró el grupo o el turno con los IDs especificados.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener turno por id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTgwODIsImV4cCI6MTcxNTgzNDA4Mn0.Hu29rpy7XZ5TWk2oiQ2jo8BuJPC0TNxiP_uvyrm6Zng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/turnos/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"turnos",
								"3"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener la información de un turno específico mediante su ID. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`GET http://localhost:8080/api/turnos/{turnoId}`\n\n- `{turnoId}`: El ID del turno que se desea obtener.\n    \n\n#### Parámetros de ruta\n\n- `turnoId` (requerido): El ID del turno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: Información del turno.\n    \n- **404 Not Found**: No se encontró ningún turno con el ID especificado.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener todos los turnos",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/turnos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"turnos"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de todos los turnos registrados en el sistema. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`GET http://localhost:8080/api/turnos`\n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: Lista de todos los turnos.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				},
				{
					"name": "Obtener todos los turnos DTO",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/turnos/dto",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"turnos",
								"dto"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite obtener una lista de todos los turnos en formato DTO (Data Transfer Object) registrado en el sistema. No se requiere autenticación para esta solicitud.\n\n#### URL\n\n`GET http://localhost:8080/api/turnos/dto`\n\n#### Encabezados\n\nNo se requieren encabezados especiales.\n\n#### Respuestas\n\n- **200 OK**: Lista de todos los turnos en formato DTO.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				}
			]
		},
		{
			"name": "Imágenes",
			"item": [
				{
					"name": "Borrar Imagen de Alumno",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/alumnos/2/imagen",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"alumnos",
								"2",
								"imagen"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar la imagen asociada a un alumno específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`DELETE http://localhost:8080/api/alumnos/{id}/imagen`\n\n- `{id}`: El ID del alumno cuya imagen se desea eliminar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del alumno.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: La imagen del alumno fue eliminada exitosamente.\n    \n- **500 Internal Server Error**: Error interno en el servidor al intentar eliminar la imagen."
					},
					"response": []
				},
				{
					"name": "Borrar Imagen de Evento",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/eventos/1/imagen",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"eventos",
								"1",
								"imagen"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite eliminar la imagen asociada a un evento específico. Requiere que el usuario tenga el rol de 'ROLE_MANAGER' o 'ROLE_ADMIN'.\n\n#### URL\n\n`DELETE http://localhost:8080/api/eventos/{id}/imagen`\n\n- `{id}`: El ID del evento cuya imagen se desea eliminar.\n    \n\n#### Parámetros de ruta\n\n- `id` (requerido): El ID del evento.\n    \n\n#### Encabezados\n\n- `Authorization: Bearer` : El token de autenticación.\n    \n\n#### Respuestas\n\n- **200 OK**: La imagen del evento fue eliminada exitosamente.\n    \n- **500 Internal Server Error**: Error interno en el servidor al intentar eliminar la imagen."
					},
					"response": []
				}
			]
		},
		{
			"name": "Email",
			"item": [
				{
					"name": "Enviar email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjcm9seXgxNkBnbWFpbC5jb20iLCJpYXQiOjE3MTU3OTcyNzgsImV4cCI6MTcxNTgzMzI3OH0.JhtyN36QC7JNeUcNPZqsCRcsC78hPD28UxpXFBw9Z58",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Juan\",\r\n    \"apellidos\": \"Pérez\",\r\n    \"email\": \"juan.perez@example.com\",\r\n    \"asunto\": \"Consulta sobre clases\",\r\n    \"mensaje\": \"Hola, me gustaría obtener más información sobre las clases de Taekwondo.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/mail/enviar",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"mail",
								"enviar"
							]
						},
						"description": "#### Descripción\n\nEste endpoint permite enviar un correo electrónico con un mensaje formateado en HTML. La información del correo se pasa en el cuerpo de la solicitud.\n\n#### URL\n\n`POST http://localhost:8080/api/email/enviar`\n\n#### Parámetros del Cuerpo\n\n- `nombre` (requerido): El nombre de la persona que envía el mensaje.\n    \n- `apellidos` (requerido): Los apellidos de la persona que envía el mensaje.\n    \n- `email` (requerido): La dirección de correo electrónico de la persona que envía el mensaje.\n    \n- `asunto` (requerido): El asunto del mensaje.\n    \n- `mensaje` (requerido): El contenido del mensaje.\n    \n\n#### Encabezados\n\n- `Content-Type: application/json`: Tipo de contenido de la solicitud.\n    \n\n#### Respuestas\n\n- **200 OK**: El correo electrónico fue enviado exitosamente.\n    \n- **500 Internal Server Error**: Error interno en el servidor."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "numPagina",
			"value": "page=1",
			"type": "string"
		},
		{
			"key": "tamPagina",
			"value": "size=10",
			"type": "string"
		},
		{
			"key": "gradoId",
			"value": "gradoId=3",
			"type": "string"
		},
		{
			"key": "categoriaId",
			"value": "categoriaId=7",
			"type": "string"
		},
		{
			"key": "nombre",
			"value": "nombre=Irene",
			"type": "string"
		}
	]
}